version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      target: prod
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      # - /app/node_modules
    environment:
      - NODE_ENV=production
      - DOCKER_CONTAINER=true
    depends_on:
      - backend
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    depends_on:
      - db
      - weaviate
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=smg_dialog
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/smg_dialog
      - WEAVIATE_URL=http://weaviate:8080
      - VECTOR_TRANSFORMER_URL=http://t2v-transformer:8080
      - APP_ENV=development
      - FRONTEND_URL=http://frontend:3000
      - ADMIN_API_KEY=admin-secret-key-12345
      - OPENAI_API_KEY=your-openai-api-key-here
    networks:
      app-network:
        aliases:
          - backend
          - localhost
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./backend:/app
      - /app/venv

  db:
    image: postgres:15
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=smg_dialog
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  weaviate:
    image: semitechnologies/weaviate:1.24.1
    ports:
      - "8080:8080"
    environment:
      - QUERY_DEFAULTS_LIMIT=20
      - AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED=true
      - DEFAULT_VECTORIZER_MODULE=text2vec-transformers
      - ENABLE_MODULES=text2vec-transformers
      - TRANSFORMERS_INFERENCE_API=http://t2v-transformer:8080
    networks:
      - app-network
    volumes:
      - weaviate_data:/var/lib/weaviate

  t2v-transformer:
    image: semitechnologies/transformers-inference:sentence-transformers-multi-qa-MiniLM-L6-cos-v1
    environment:
      - ENABLE_CUDA=0
    networks:
      - app-network

volumes:
  postgres_data:
  weaviate_data:

networks:
  app-network:
    driver: bridge
