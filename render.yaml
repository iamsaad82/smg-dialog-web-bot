services:
  - type: web
    name: dialog-ai-web-backend
    env: python
    buildCommand: >
      cd backend && 
      echo "WICHTIG: Datenbanktabellen mÃ¼ssen manuell erstellt werden! Siehe create-tables.md" &&
      python -m pip install --upgrade pip &&
      pip install -r requirements.txt &&
      pip install alembic psycopg2-binary sqlalchemy &&
      chmod +x render-build.sh &&
      ./render-build.sh
    startCommand: >
      cd backend &&
      python -m uvicorn app.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: POSTGRES_HOST
        fromDatabase:
          name: dialog-ai-db
          property: host
      - key: POSTGRES_DB
        fromDatabase:
          name: dialog-ai-db
          property: database
      - key: POSTGRES_USER
        fromDatabase:
          name: dialog-ai-db
          property: user
      - key: POSTGRES_PASSWORD
        fromDatabase:
          name: dialog-ai-db
          property: password
      - key: POSTGRES_PORT
        fromDatabase:
          name: dialog-ai-db
          property: port
      - key: WEAVIATE_URL
        value: http://weaviate:8080
      - key: SECRET_KEY
        generateValue: true
      - key: ADMIN_USER_EMAIL
        value: admin@example.com
      - key: ADMIN_USER_PASSWORD
        generateValue: true

  - type: web
    name: dialog-ai-web-frontend
    env: node
    buildCommand: cd frontend && npm install && npm run build
    startCommand: cd frontend && npm start
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://dialog-ai-web-backend.onrender.com/api/v1

databases:
  - name: dialog-ai-db
    plan: starter 